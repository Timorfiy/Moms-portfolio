/**
  Нормализация блочной модели
 */
*,
::before,
::after {
  box-sizing: border-box;
}

/**
   Убираем внутренние отступы слева тегам списков,
   у которых есть атрибут class
  */
:where(ul, ol):where([class]) {
  padding-left: 0;
}

/**
   Убираем внешние отступы body и двум другим тегам,
   у которых есть атрибут class
  */
body,
:where(blockquote, figure):where([class]) {
  margin: 0;
}

/**
   Убираем внешние отступы вертикали нужным тегам,
   у которых есть атрибут class
  */
:where(h1, h2, h3, h4, h5, h6, p, ul, ol, dl):where([class]) {
  margin-block: 0;
}

:where(dd[class]) {
  margin-left: 0;
}

:where(fieldset[class]) {
  margin-left: 0;
  padding: 0;
  border: none;
}

/**
   Убираем стандартный маркер маркированному списку,
   у которого есть атрибут class
  */
:where(ul[class]) {
  list-style: none;
}

:where(address[class]) {
  font-style: normal;
}

/**
   Обнуляем вертикальные внешние отступы параграфа,
   объявляем локальную переменную для внешнего отступа вниз,
   чтобы избежать взаимодействие с более сложным селектором
  */
p {
  --paragraphMarginBottom: 24px;

  margin-block: 0;
}

/**
   Внешний отступ вниз для параграфа без атрибута class,
   который расположен не последним среди своих соседних элементов
  */
p:where(:not([class]):not(:last-child)) {
  margin-bottom: var(--paragraphMarginBottom);
}

/**
   Упрощаем работу с изображениями
  */
img {
  display: block;
  max-width: 100%;
}

/**
   Наследуем свойства шрифт для полей ввода
  */
input,
textarea,
select,
button {
  font: inherit;
}

html {
  /**
     Пригодится в большинстве ситуаций
     (когда, например, нужно будет "прижать" футер к низу сайта)
    */
  height: 100%;
}

/**
   Плавный скролл
  */
html,
:has(:target) {
  scroll-behavior: smooth;
}

body {
  /**
     Пригодится в большинстве ситуаций
     (когда, например, нужно будет "прижать" футер к низу сайта)
    */
  min-height: 100%;
  /**
     Унифицированный интерлиньяж
    */
  line-height: 1.5;
}

/**
   Приводим к единому цвету svg-элементы
  */
svg *[fill] {
  fill: currentColor;
}
svg *[stroke] {
  stroke: currentColor;
}

/**
   Чиним баг задержки смены цвета при взаимодействии с svg-элементами
  */
svg * {
  transition-property: fill, stroke;
}

/**
   Удаляем все анимации и переходы для людей,
   которые предпочитают их не использовать
  */
@media (prefers-reduced-motion: reduce) {
  *,
  ::before,
  ::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}

@font-face {
  font-family: 'Mulish';
  src: url('/fonts/Mulish-Regular.woff2') format('woff2');
  src: url('/fonts/Mulish-Regular.ttf') format('ttf');
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}

@font-face {
  font-family: 'Mulish';
  src: url('/fonts/Mulish-Bold.woff2') format('woff2');
  src: url('/fonts/Mulish-ExtraBold.ttf') format('ttf');
  font-weight: 700;
  font-style: normal;
  font-display: swap;
}

.custom-font {
  font-family: 'Mulish', monospace, sans-serif;
}

.bold {
  font-weight: 700;
}

:root {
  --font-size-p: clamp(0.3rem, 3vw, 1.3rem);
  --font-size-li: clamp(0.4rem, 3.5vw, 1.6rem);
  --font-size-a: clamp(0.6rem, 3vw, 1.2rem);
  --font-size-h1: clamp(2rem, 5vw, 5rem);
  --font-size-h2: clamp(1rem, 3.5vw, 2rem);
  --font-size-h3: clamp(0.5rem, 3.75vw, 1.5rem);
}

body {
  margin: 0;
  padding: 0;
  font-family: 'Mulish';
  background-color: #d6d6d6;
}

p {
  margin: 0;
  padding: 0;
  font-size: var(--font-size-p);
}

a {
  font-size: var(--font-size-h2-a);
}

a {
  color: black;
}

h1 {
  font-size: var(--font-size-h1);
}

h2 {
  font-size: var(--font-size-h2);
}

h3 {
  font-size: var(--font-size-h3);
}

ul {
  padding-inline-start: 40px;
  padding-inline-end: 20px;
}

li {
  font-size: var(--font-size-li);
  padding: 0;
}

section {
  padding: 2vw 2vw 2vw 2vw;
}

.header {
  display: grid;
  grid-template-columns: 2fr 4fr;
  justify-items: center;
  background-color: #5d5d5d;
}

.branding {
  display: grid;
  background-color: #171717;
  color: #ffffff;
  justify-content: center;
  align-items: center;
  font-size: 1.5rem;
  width: 100%;
}

.branding p {
  font-size: clamp(1rem, 4vw, 2rem);
  display: flex;
  margin: 0;
}

.nav {
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  text-align: center;
  justify-items: center;
  gap: 5%;
  align-items: center;
  color: black;
}

/* .line {
  display: flex;
  justify-content: center;
  align-items: center;
  font-size: clamp(1.5rem, 2.5vw, 4re);
  border-top: 5px solid;
  border-bottom: 5px solid;
  background-color: #FFEE32;
  color: black;
  height: 100px;
  text-align: center;
} */

.line {
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 0 1em 1em 1em;
  text-align: center;
}

.present {
  position: relative;
  display: grid;
  grid-template-columns: repeat(12, 1fr);
  justify-items: center;
  align-items: center;
  font-size: 200%;
  background-color: #171717;
  color: white;
  padding: 0;
}

.present h1 {
  grid-column: 4/7;
  position: absolute;
}

.present img {
  grid-column: 5/13;
  width: 100%;
  height: 360px;
  object-fit: fill;
}

.about-me {
  display: grid;
  grid-template-columns: 3fr 5fr;
  background-color: #ececec;
  color: black;
}

.dvuh {
  font-size: 30px;
}

.about-me-div-img {
  display: grid;
}

.about-me img {
  width: 100%;
  object-fit: fill;
  justify-self: center;
}

.about-me-p {
  align-self: center;
}

.about-me-p p {
  padding: 1em;
}

.work-exp {
  display: flex;
  flex-direction: column;
  background-color: #ffffff;
}

.skills {
  display: flex;
  flex-direction: column;
  background-color: #ececec;
}

.div-skills {
  display: flex;
  justify-content: space-between;
  width: 100%;
}

.column-skills {
  flex: 1;
  display: flex;
  justify-content: flex-start;
  flex-direction: column;
  align-items: center;
}

footer {
  background-color: #171717;
  display: flex;
  padding: 2em;
}

footer p {
  display: flex;
  align-self: center;
  color: white;
  margin: 0;
}
